{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * Everything related to viewport\n */import React,{useEffect}from'react';var _local={height:window.innerHeight,width:window.innerWidth,device:'mobile',orientation:'portrait',linked:[],link:function link(f){this.linked.push(f);},calc:function calc(){this.height=window.innerHeight;this.width=window.innerWidth;this.device=this.width<500?'mobile':this.width>950?'desctop':'pad';this.orientation=this.height<this.width?'landscape':'portrait';},setVh:function setVh(){var vh=\"\".concat(this.height/100,\"px\");document.documentElement.style.setProperty('--vh',vh);},trigger:function trigger(){this.linked.forEach(function(f){return f();});}};_local.calc();var currentDevice=_local.device;// let currentOrientation = '';\nvar tick=false;var ViewportLogic=function ViewportLogic(props){_local.setVh();useEffect(function(){var handleResize=function handleResize(event){_local.calc();// conditionallly trigger rerenders and functions in our componenets\nif(!tick&&_local.device!==currentDevice){// the frame request and tick are not required here but I want to throttle updates\nwindow.requestAnimationFrame(function(){_local.trigger();tick=false;currentDevice=_local.device;});tick=true;}};window.addEventListener('resize',handleResize);});return/*#__PURE__*/_jsx(_Fragment,{});};export{ViewportLogic};","map":{"version":3,"sources":["C:/webWork/olivertwist/src/logic/viewport.jsx"],"names":["React","useEffect","_local","height","window","innerHeight","width","innerWidth","device","orientation","linked","link","f","push","calc","setVh","vh","document","documentElement","style","setProperty","trigger","forEach","currentDevice","tick","ViewportLogic","props","handleResize","event","requestAnimationFrame","addEventListener"],"mappings":"gGAAA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACdC,MAAM,CAAEC,MAAM,CAACC,WADD,CAEdC,KAAK,CAAEF,MAAM,CAACG,UAFA,CAGdC,MAAM,CAAE,QAHM,CAIdC,WAAW,CAAE,UAJC,CAKdC,MAAM,CAAE,EALM,CAMdC,IANc,eAMRC,CANQ,CAMJ,CACT,KAAKF,MAAL,CAAYG,IAAZ,CAAkBD,CAAlB,EACA,CARa,CASdE,IATc,gBASP,CACN,KAAKX,MAAL,CAAcC,MAAM,CAACC,WAArB,CACA,KAAKC,KAAL,CAAaF,MAAM,CAACG,UAApB,CACA,KAAKC,MAAL,CAAc,KAAKF,KAAL,CAAa,GAAb,CAAmB,QAAnB,CAA8B,KAAKA,KAAL,CAAa,GAAb,CAAmB,SAAnB,CAA+B,KAA3E,CACA,KAAKG,WAAL,CAAmB,KAAKN,MAAL,CAAc,KAAKG,KAAnB,CAA2B,WAA3B,CAAyC,UAA5D,CACA,CAda,CAedS,KAfc,iBAeN,CACP,GAAIC,CAAAA,EAAE,WAAM,KAAKb,MAAL,CAAc,GAApB,MAAN,CACAc,QAAQ,CAACC,eAAT,CAAyBC,KAAzB,CAA+BC,WAA/B,CAA2C,MAA3C,CAAmDJ,EAAnD,EACA,CAlBa,CAmBdK,OAnBc,mBAmBJ,CACT,KAAKX,MAAL,CAAYY,OAAZ,CAAoB,SAAAV,CAAC,QAAIA,CAAAA,CAAC,EAAL,EAArB,EACA,CArBa,CAAf,CAuBAV,MAAM,CAACY,IAAP,GACA,GAAIS,CAAAA,aAAa,CAAGrB,MAAM,CAACM,MAA3B,CACA;AACA,GAAIgB,CAAAA,IAAI,CAAG,KAAX,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAE9BxB,MAAM,CAACa,KAAP,GAEAd,SAAS,CAAC,UAAM,CAEf,GAAM0B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAE7B1B,MAAM,CAACY,IAAP,GAEA;AACA,GAAI,CAACU,IAAD,EAAStB,MAAM,CAACM,MAAP,GAAkBe,aAA/B,CAA8C,CAE7C;AACAnB,MAAM,CAACyB,qBAAP,CAA6B,UAAM,CAElC3B,MAAM,CAACmB,OAAP,GAEAG,IAAI,CAAG,KAAP,CACAD,aAAa,CAAGrB,MAAM,CAACM,MAAvB,CACA,CAND,EAOAgB,IAAI,CAAG,IAAP,CACA,CACD,CAjBD,CAmBApB,MAAM,CAAC0B,gBAAP,CAAyB,QAAzB,CAAmCH,YAAnC,EACA,CAtBQ,CAAT,CAyBA,mBACC,kBADD,CAMA,CAnCD,CAqCA,OAASF,aAAT","sourcesContent":["/**\n * Everything related to viewport\n */\nimport React, { useEffect } from 'react';\n\nconst _local = {\n\theight: window.innerHeight,\n\twidth: window.innerWidth,\n\tdevice: 'mobile',\n\torientation: 'portrait',\n\tlinked: [],\n\tlink( f ) {\n\t\tthis.linked.push( f );\n\t},\n\tcalc() {\n\t\tthis.height = window.innerHeight;\n\t\tthis.width = window.innerWidth;\n\t\tthis.device = this.width < 500 ? 'mobile' : this.width > 950 ? 'desctop' : 'pad' ;\n\t\tthis.orientation = this.height < this.width ? 'landscape' : 'portrait' ;\n\t},\n\tsetVh() {\n\t\tlet vh = `${this.height / 100}px`;\n\t\tdocument.documentElement.style.setProperty('--vh', vh);\n\t},\n\ttrigger() {\n\t\tthis.linked.forEach(f => f());\n\t},\n}\n_local.calc();\nlet currentDevice = _local.device;\n// let currentOrientation = '';\nlet tick = false;\n\nconst ViewportLogic = props => {\n\n\t_local.setVh();\n\n\tuseEffect(() => {\n\n\t\tconst handleResize = event => {\n\n\t\t\t_local.calc();\n\n\t\t\t// conditionallly trigger rerenders and functions in our componenets\n\t\t\tif (!tick && _local.device !== currentDevice) {\n\n\t\t\t\t// the frame request and tick are not required here but I want to throttle updates\n\t\t\t\twindow.requestAnimationFrame(() => {\n\n\t\t\t\t\t_local.trigger();\n\n\t\t\t\t\ttick = false;\n\t\t\t\t\tcurrentDevice = _local.device;\n\t\t\t\t});\n\t\t\t\ttick = true;\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener( 'resize', handleResize );\n\t});\n\n\n\treturn (\n\t\t<>\n\t\t\t{/* lets see if it works with an empty element */}\n\t\t\t{/* Will also try to return 'null' */}\n\t\t</>\n\t);\n}\n\nexport { ViewportLogic }"]},"metadata":{},"sourceType":"module"}
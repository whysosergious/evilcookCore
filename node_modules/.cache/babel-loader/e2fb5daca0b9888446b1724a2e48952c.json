{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\webWork\\\\olivertwist\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\"; // zergski logic\n\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\nimport Home from './Pages/Home'; // nav\n\nimport Navigation from './Navigation/Container'; // Page Sections\n\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container'; // Routed pages\n\nimport GalleryPage from 'Pages/Gallery/Container'; // Modals\n\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window'; // components\n\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor';\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\n\nconst handleNavigation = ({\n  entry,\n  observer\n}) => {\n  if (entry.target.zKey === 'Nav' && entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: 'stuck'\n    });\n  } else if (entry.target.zKey === 'Nav' && !entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: ''\n    });\n  }\n};\n\nconst handleViewportAnimated = ({\n  entry,\n  observer,\n  prevRatio\n}) => {\n  // console.log(entry.target.zKey, entry.isIntersecting)\n  if (entry.isIntersecting) {\n    queueFrame(() => {\n      entry.target.zEl.setState('');\n    });\n    observer.unobserve(entry.target);\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [route] = useRouterHook(null);\n  const main = {\n    root: useRef(null),\n    ref: useRef(null)\n  };\n  useEffect(() => {\n    // for the global object to be accessible through import, it has to be initialized\n    // after a 'componentDidMount' or 'useEffect' in that component\n    const {\n      Sections,\n      ViewportAnimated\n    } = globalObj;\n    globalObj.Sections.Nav.current = 0;\n    main.ref = main.ref.current;\n    main.root = main.ref.parentElement;\n    globalObj.main = main; // all you need to create an intersectionObserver\n    // a reference of to the observer, in our case\n    // the root element\n\n    createObserver('ViewportAnimation', main.root, // observer\n    Object.values(ViewportAnimated).map(e => {\n      return e.ref;\n    }), handleViewportAnimated, // callback function\n    ['-20% 0px -20% 0px'], 1);\n    createObserver('Navigation', main.root, // observer\n    Sections.Nav.ref, handleNavigation, // callback function\n    ['0px 0px -99% 0px'], 1); // window.onclick = e => {\n    // \tconsole.log(e.target);\n    // \tconsole.log(e.target.inerHtml)\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    ref: main.ref,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [route ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this) : '', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        component: GalleryPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"k9i5lRjd7j/W46QiWGg1m8jA2S8=\", false, function () {\n  return [useRouterHook];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/webWork/olivertwist/src/App.js"],"names":["useEffect","useRef","Redirect","Route","BrowserRouter","Router","useGlobalObj","globalObj","createObserver","queueFrame","routerHook","useRouterHook","Home","Navigation","LandingContainer","DoormatContainer","NewsContainer","GalleryContainer","MenuContainer","AboutContainer","ContactContainer","FooterContainer","GalleryPage","MediaViewer","ModalWindow","Button","Anchor","handleNavigation","entry","observer","target","zKey","isIntersecting","Sections","Nav","setState","sticky","handleViewportAnimated","prevRatio","zEl","unobserve","App","route","main","root","ref","ViewportAnimated","current","parentElement","Object","values","map","e"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\";\n\n// zergski logic\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\n\nimport Home from './Pages/Home';\n\n// nav\nimport Navigation from './Navigation/Container';\n\n// Page Sections\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container';\n\n// Routed pages\nimport GalleryPage from 'Pages/Gallery/Container';\n\n// Modals\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window';\n\n// components\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor';\n\n\n\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\nconst handleNavigation = ({ entry, observer }) => {\n\tif ( entry.target.zKey === 'Nav' && entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: 'stuck' });\n\t} else if ( entry.target.zKey === 'Nav' && !entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: '' });\n\t}\n}\n\nconst handleViewportAnimated = ({ entry, observer, prevRatio }) => {\n\t// console.log(entry.target.zKey, entry.isIntersecting)\n\tif ( entry.isIntersecting ) {\n\t\tqueueFrame(() => {\n\t\t\tentry.target.zEl.setState( '' );\n\t\t});\n\t\tobserver.unobserve( entry.target );\n\t}\n}\n\nconst App = () => {\n\tconst [ route ] = useRouterHook(null);\n\n\tconst main = {\n\t\troot: useRef(null),\n\t\tref: useRef(null),\n\t}\n\n\tuseEffect(() => {\n\t\t// for the global object to be accessible through import, it has to be initialized\n\t\t// after a 'componentDidMount' or 'useEffect' in that component\n\t\tconst { Sections, ViewportAnimated } = globalObj;\n\t\tglobalObj.Sections.Nav.current = 0;\n\t\tmain.ref = main.ref.current;\n\t\tmain.root = main.ref.parentElement;\n\t\tglobalObj.main = main;\n\t\t// all you need to create an intersectionObserver\n\t\t// a reference of to the observer, in our case\n\t\t// the root element\n\t\tcreateObserver (\n\t\t\t'ViewportAnimation',\n\t\t\tmain.root,\t// observer\n\t\t\tObject.values(ViewportAnimated).map( e => { return e.ref }),\n\t\t\thandleViewportAnimated,\t// callback function\n\t\t\t['-20% 0px -20% 0px'],\n\t\t\t1\n\t\t);\n\t\tcreateObserver (\n\t\t\t'Navigation',\n\t\t\tmain.root,\t// observer\n\t\t\tSections.Nav.ref,\n\t\t\thandleNavigation,\t// callback function\n\t\t\t['0px 0px -99% 0px'],\n\t\t\t1\n\t\t);\n\n\t\t// window.onclick = e => {\n\t\t// \tconsole.log(e.target);\n\t\t// \tconsole.log(e.target.inerHtml)\n\t\t// }\n\t}, []);\n\n\treturn (\n\n\n\n\t\t\t<main className=\"App\" ref={ main.ref }>\n\t\t\t\t{/* <LandingContainer />\n\t\t\t\t<Navigation />\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<Anchor altClass=\"icon\"\n\t\t\t\t\t\tlink=\"none\"\n\t\t\t\t\t\tfileName=\"otlogo-white-simple.svg\"\n\t\t\t\t\t\tstyle={{ marginRight: 'auto', height: '2.4rem' }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button altClass=\"minimal lang\"\n\t\t\t\t\t\ttext=\"Eng.\"\n\t\t\t\t\t\tclicked={ '' }\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\n\t\t\t\t<DoormatContainer />\n\t\t\t\t<NewsContainer />\n\t\t\t\t<GalleryContainer />\n\t\t\t\t<MenuContainer />\n\t\t\t\t<AboutContainer />\n\t\t\t\t<ContactContainer />\n\t\t\t\t<FooterContainer />\n\n\t\t\t\t<MediaViewer />\n\t\t\t\t<ModalWindow /> */}\n\t\t\t\t<Router>\n\t\t{ route ? <Redirect to={ route } /> : '' }\n\t\t \t<Route path=\"/\" component={ Home } />\n      \t<Route path=\"/gallery\" component={ GalleryPage } />\n\t\t</Router>\n\n\t\t\t</main>\n\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}